from aiohttp import webfrom handler import hula_httpimport syssys.path.append('../../')from common import helperimport timeimport jsonimport asyncioimport aiomysqlimport aioredisimport aiohttp_sessionfrom aiohttp_session.cookie_storage import EncryptedCookieStoragefrom cryptography import fernetimport base64loop = asyncio.get_event_loop()app_web = web.Application()app_web.router.add_post('/login',hula_http.HulaApi.login)app_web.router.add_post('/gate',hula_http.HulaApi.gate)configMain= helper.getServer('web')dbConfig = helper.getServer('mysql')redisConfig = helper.getServer('redis')#构建session加密fernet_key = fernet.Fernet.generate_key()secret_key = base64.urlsafe_b64decode(fernet_key)aiohttp_session.setup(app_web,EncryptedCookieStorage(secret_key))async def init(app):    app['pool'] = await aiomysql.create_pool(host=dbConfig['host'], port=int(dbConfig['port']),                                      user=dbConfig['user'], password=dbConfig['password'],                                      db=dbConfig['database'], loop=loop)    app['redis']=await aioredis.create_pool((redisConfig['host'],int(redisConfig['port'])),                                            minsize=5, maxsize=10,                                            loop=loop)if __name__ == '__main__':    # aes = helper.AESCipher()    # t=aes.encrypt(json.dumps({'uid':'100001','time':int(time.time())}))    # print(str(t,encoding='utf8'))    app_web.on_startup.append(init)    web.run_app(app_web,host=str(configMain['host']),port=int(configMain['port']))